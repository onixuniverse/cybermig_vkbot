import os
import random
import string

import vk_api
from dotenv import load_dotenv
from vk_api import VkUpload
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id

from src import keyboards, db, gsheets, logger, threading, gmail

load_dotenv()


class Bot:
    def __init__(self, api_token):
        self.conn = db.connect()
        self.cur = self.conn.cursor()

        self.vk_session = vk_api.VkApi(token=api_token)
        self.long_poll = VkLongPoll(self.vk_session)
        self.vk_upload = VkUpload(self.vk_session)
        self.vk = self.vk_session.get_api()

        self.email_address = os.getenv("EMAIL_ADDRESS")
        self.admin_list_id = [6700376, 219871037]

    def start(self):
        logger.info("–ë–æ—Ç –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É.")

        db.check(self.conn, self.cur)
        self.message_wait()

    def send_msg(self, user_id: int, message: str, keyboard=None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        if keyboard is None:
            keyboard = '{"buttons": [], "one_time": true}'
        self.vk.messages.send(peer_id=user_id, message=message, random_id=get_random_id(), keyboard=keyboard)

    def get_user_name(self, user_id: int):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return `str`"""
        return self.vk.users.get(user_id=user_id)[0]

    def export_users(self, event):
        if event.user_id in self.admin_list_id:
            rows = db.fetchall(self.cur, "SELECT * FROM users")
            positive, negative = gsheets.add_to_table(rows)

            msg = f"–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {positive}\n–£–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ: {negative}"
            self.send_msg(event.user_id, msg)

            logger.info(f"{positive} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É. {negative} —É–∂–µ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ.")

    def mailing(self, event):
        if event.user_id in self.admin_list_id:
            msg_text = event.text[11::]
            rows = db.fetchall(self.cur, "SELECT vk_user_id FROM users")
            for id in rows:
                self.vk.messages.send(peer_id=id[0], message=msg_text, random_id=get_random_id())

    def message_wait(self):
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                start_words = ["–ø—Ä–∏–≤–µ—Ç", "–Ω–∞—á–∞—Ç—å", "start", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"]
                main_page_words = ["üìÑ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", "–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", "–≥–ª–∞–≤–Ω–∞—è", "üìÑ –Ω–∞ –≥–ª–∞–≤–Ω—É—é", "–Ω–∞ –≥–ª–∞–≤–Ω—É—é"]
                info_page_words = ["‚ÑπÔ∏è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–∏–Ω—Ñ–æ"]
                reg_page_words = ["üíÅ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "—Ä–µ–≥"]

                info_page_msg = "–ü—Ä–æ–µ–∫—Ç –®–∫–æ–ª—å–Ω–∞—è –ª–∏–≥–∞ ¬´–ö–∏–±–µ—Ä–ú–∏–≥¬ª –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏–∫–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö " \
                                "–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–µ—Ç–µ–π –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤, –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –≤ –≥–æ—Ä–æ–¥–µ " \
                                "–ö—É—Ä–≥–∞–Ω–µ. –ü—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è —á–µ—Ç—ã—Ä–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å (" \
                                "–∏—Å—Ç–æ—Ä–∏—è –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∞, –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –º–∞—Å—Ç–µ—Ä ‚Äì –∫–ª–∞—Å—Å—ã –æ—Ç —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤), " \
                                "—Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ (–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –æ—Ç –ö–ú–° –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã), –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ " \
                                "—Ç—É—Ä–Ω–∏—Ä—ã –ø–æ –∏–≥—Ä–∞–º, —É—á–∞—Å—Ç–∏–µ –∫–æ–º–∞–Ω–¥ –≤–æ –í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ-–∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π " \
                                "–ª–∏–≥–µ –∏ –í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π —à–∫–æ–ª—å–Ω–æ–π –ª–∏–≥–µ –†–î–®."

                # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                if event.message.lower() in start_words:
                    hello_msg = f"–ü—Ä–∏–≤–µ—Ç, {self.get_user_name(event.user_id)['first_name']}! –Ø –ë–æ—Ç, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ " \
                                f"—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ—Å–Ω–æ–≤–Ω—É—é " \
                                f"–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\nüìÑ –ù–∞ –≥–ª–∞–≤–Ω—É—é ‚Äì —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –¥–∞–ª—å—à–µ. "
                    self.send_msg(event.user_id, hello_msg, keyboards.to_main_page)

                # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                elif event.message.lower() in main_page_words:
                    main_page_msg = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                    self.send_msg(event.user_id, main_page_msg, keyboards.main_menu)

                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                elif event.message.lower() in info_page_words:
                    self.send_msg(event.user_id, info_page_msg, keyboards.to_main_page)

                # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ—â–∏
                elif event.message == "üÜò –ü–æ–º–æ—â—å" or event.message.lower() == "–ø–æ–º–æ—â—å":
                    help_msg = "1. ‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.\n2. üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚Äì –ø–æ–º–æ—â—å –Ω–∞–ø—Ä—è–º—É—é —Å " \
                               "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞.\n3. ‚ùì –ß–∞–í–æ ‚Äì —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã."
                    self.send_msg(event.user_id, help_msg, keyboards.help_page)

                # –ö–æ–º–∞–Ω–¥—ã
                elif event.message == "‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã" or event.message.lower() == "–∫–æ–º–∞–Ω–¥—ã":
                    cmd_msg = "1. ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚Äì –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ.\n2. üíÅ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äì —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è " \
                              "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ.\n3. ‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.\n4. üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚Äì " \
                              "–ø–æ–º–æ—â—å –Ω–∞–ø—Ä—è–º—É—é —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞.\n5. ‚ùì –ß–∞–í–æ ‚Äì —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n6. üÜò " \
                              "–ü–æ–º–æ—â—å ‚Äì –ø–æ–º–æ—â—å. "
                    self.send_msg(event.user_id, cmd_msg, keyboards.help_page)

                # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                elif event.message == "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" or event.message.lower() == "–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
                    callback_msg = "‚Ä¢ –ú–∞—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞\n" \
                                   "VK: https://vk.com/marinaangelivanova\n" \
                                   "Instagram: https://www.instagram.com/iteacherma/\n\n" \
                                   "‚Ä¢ –î–∞—Ä—å—è –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞ –ú–µ–∑–µ–Ω—Ü–µ–≤–∞" \
                                   "\nVK: https://vk.com/aleesk\n" \
                                   "Instagram: https://www.instagram.com/teach_hist/\n\n" \
                                   "–ü–æ –ø–æ–≤–æ–¥—É –æ—à–∏–±–æ–∫ –±–æ—Ç–∞ –ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É: warofmyhome@gmail.com"
                    self.send_msg(event.user_id, callback_msg, keyboards.help_page)

                # –ß–∞–í–æ
                elif event.message == "‚ùì –ß–∞–í–æ" or event.message == "–ß–∞–í–æ":
                    faq_msg = ["1. –°–æ —Å–∫–æ–ª—å–∫–∏ –ª–µ—Ç –º–æ–∂–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å?\n–û—Ç–≤–µ—Ç: —Å 10 –¥–æ 18 –ª–µ—Ç.\n\n",
                               "2. –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏?\n–û—Ç–≤–µ—Ç: —Ç—Ä–∏ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–∞—Å—Ç–∞–≤–∏—Ç –±–æ—Ç –∏ "
                               "—Å–ø—Ä–∞–≤–∫–∞ –æ –∑–∞–Ω—è—Ç–∏—è—Ö —Å–ø–æ—Ä—Ç–æ–º."]  # –¥–æ–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã
                    self.send_msg(event.user_id, "".join(faq_msg), keyboards.help_page)

                # –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã
                elif "//—ç–∫—Å–ø–æ—Ä—Ç" in event.message:
                    self.export_users(event)

                elif "//—Ä–∞—Å—Å—ã–ª–∫–∞" in event.message:
                    self.mailing(event)

                # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ
                elif event.message.lower() in reg_page_words:
                    threading.create_thread(self.user_registration, (event.user_id,))

    def user_registration(self, user_id: int):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ"""
        result = db.fetchone(self.cur, "SELECT * FROM users WHERE vk_user_id = ?", (user_id,))
        if not result:
            reg_msg_0 = "–¢–≤–æ—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–µ –Ω–∞—á–∞—Ç–∞, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üòå\n\n–î–ª—è –Ω–∞—á–∞–ª–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –§–ò–û –≤ –æ–¥–Ω–æ–º " \
                        "—Å–æ–æ–±—â–µ–Ω–∏–∏, –Ω–æ –ø–æ–º–Ω–∏, —á—Ç–æ —Å –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –í–ö –º–æ–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¢–û–õ–¨–ö–û –æ–¥–∏–Ω " \
                        "—Ä–∞–∑!\n\n–ü–∏—à–∏ –¢–û–õ–¨–ö–û —Å–≤–æ—ë –§–ò–û, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –±—É–¥–µ—Ç –∑–∞–Ω–µ—Å–µ–Ω–æ –≤ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ " \
                        "—É–∂–µ –±—É–¥–µ—Ç –Ω–µ–ª—å–∑—è!"
            self.send_msg(user_id, reg_msg_0)
            user_full_name = self.wait_full_name_from_user(user_id)
            logger.info(f"{user_id} –Ω–∞—á–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")

            reg_msg_1 = "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?"
            self.send_msg(user_id, reg_msg_1)
            user_age = self.wait_age_from_user(user_id)

            reg_msg_2 = "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è.\n\n–ü—Ä–∏–º–µ—Ä: –ú–ë–û–£ \"–°–û–®\" ‚Ññ49 –≥.–ö—É—Ä–≥–∞–Ω–∞"
            self.send_msg(user_id, reg_msg_2)
            user_educational_institution = self.wait_educational_institution_from_user(user_id)

            reg_msg_3 = "–ò—Ç–∞–∫, —Ç–µ–ø–µ—Ä—å –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –≤ –∫–∞–∫–æ–º –∫–ª–∞—Å—Å–µ —Ç—ã —É—á–∏—à—å—Å—è, –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∏ –±—É–∫–≤—É –°–õ–ò–¢–ù–û."
            self.send_msg(user_id, reg_msg_3)
            user_class = self.wait_class_from_user(user_id)

            code = ''.join(random.sample(string.ascii_uppercase, k=6))

            db.execute(self.conn, self.cur, "INSERT INTO users VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                       (user_id, user_full_name[0], user_full_name[1], user_full_name[2], user_age,
                        user_educational_institution, user_class, code))

            reg_msg_4 = "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üéâ –¢—ã –ø—Ä–æ—à–µ–ª –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n –¢–µ–ø–µ—Ä—å —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ " \
                        "—Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å, –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É —Å–∫–∞–Ω –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é." \
                        "\n\n ‚ùó –ù–æ! –£–∫–∞–∂–∏ –≤ –¢–ï–ú–ï —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ø–æ–∑–∂–µ. "
            self.send_msg(user_id, reg_msg_4, keyboards.ready)

            file1 = "https://docs.google.com/document/d/19WhOYSJieVnCnh2P0Q7iEOB8Wvj8qHQS/edit?usp=sharing&ouid=108319410384893119199&rtpof=true&sd=true"
            file2 = "https://docs.google.com/document/d/17dG2x6Yua-EXv2vu9TbZ5k9HnwX7Hc0nWHvVJ6q29g0/edit?usp=sharing"
            file3 = "https://docs.google.com/document/d/1-VQ8mGoA8tqE4gLIWQxCy0kMWWNQqDFA/edit?usp=sharing&ouid=108319410384893119199&rtpof=true&sd=true"
            reg_file_msg = f"üìÑ –ü–µ—Ä–≤—ã–π —Ñ–∞–π–ª ‚Äì {file1}\n" \
                           f"üìÑ –í—Ç–æ—Ä–æ–π —Ñ–∞–π–ª ‚Äì {file2}\n" \
                           f"üìÑ –¢—Ä–µ—Ç–∏–π —Ñ–∞–π–ª ‚Äì {file3}"
            self.send_msg(user_id, reg_file_msg, keyboards.ready)

            reg_msg_code = f"–ü–æ—á—Ç–∞: {self.email_address}\n{code} ‚Äì —ç—Ç–æ—Ç –∫–æ–¥ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ –ø–æ–ª–µ –¢–ï–ú–ê –≤ " \
                           f"—Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–º–µ—Å—Ç–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏–ª–∏ —Å–∫–∞–Ω–æ–º –Ω–∞ –ø–æ—á—Ç—É.\n\n–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—à—å –∂–º–∏ \"üëç –ì–æ—Ç–æ–≤–æ!\"" \
                           f"\n\n–û—Ç–≤–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫. "
            self.send_msg(user_id, reg_msg_code, keyboards.ready)

            check_inbox_msg = False
            while not check_inbox_msg:
                check_inbox_msg = self.wait_ready_msg(user_id)
                if check_inbox_msg:
                    reg_msg_5 = "–û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–ü–æ–∑–∂–µ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –∏ –≤—Å—ë " \
                                "–ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∂—É—Ç. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ –ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã ‚Äì –∑–∞—Ö–æ–¥–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –ø–æ–º–æ—â—å! "
                    self.send_msg(user_id, reg_msg_5, keyboards.to_main_page)
                    return
                else:
                    err_msg_reg_5 = "–•–º–º... –ü–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –Ø –Ω–µ –≤–∏–∂—É —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –∏–ª–∏ " \
                                    "—Å–≤—è–∂–∏—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
                    self.send_msg(user_id, err_msg_reg_5, keyboards.ready)
        else:
            msg = "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ.\n–° –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –º–æ–∂–Ω–æ " \
                  "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¢–û–õ–¨–ö–û –æ–¥–∏–Ω —Ä–∞–∑!"
            self.send_msg(user_id, msg, keyboards.to_main_page)
            return

    def wait_full_name_from_user(self, user_id: int):
        """–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞: –∑–∞–ø—Ä–æ—Å –§–ò–û"""
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.peer_id == user_id:
                full_name = event.message.split()
                if len(full_name) == 3:
                    return full_name
                else:
                    error_name_msg = "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.\n\n–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                    self.send_msg(event.user_id, error_name_msg)

    def wait_age_from_user(self, user_id: int):
        """–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞: –∑–∞–ø—Ä–æ—Å –≤–æ–∑—Ä–∞—Å—Ç–∞
        :return `str`"""
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.peer_id == user_id:
                return event.message

    def wait_educational_institution_from_user(self, user_id: int):
        """–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞: –∑–∞–ø—Ä–æ—Å –û–£
        :return `str`"""
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.peer_id == user_id:
                return event.message

    def wait_class_from_user(self, user_id: int):
        """–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞: –∑–∞–ø—Ä–æ—Å —É—á–µ–±–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
        :return `str`"""
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.peer_id == user_id:
                return event.message

    def wait_ready_msg(self, user_id: int):
        """–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞: –∑–∞–ø—Ä–æ—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        :return `bool`"""
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.peer_id == user_id:
                email_msgs = gmail.get_inbox()
                unique_code = ''.join(db.fetchone(self.cur, "SELECT code FROM users WHERE vk_user_id = ?", (user_id,)))
                if email_msgs:
                    for msg in email_msgs:
                        if msg['title'] == unique_code:
                            return True
                return False
